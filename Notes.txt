1. First a database design korlam. Foriegn key, Unique Key thik moto dilam.


2. Docker image docker hub theke pull korlam and exec korlam. Migration script likhlam.
3. golang/migrate package use kora hoy ei migrate korar jonno. up and down script alada alada kore generate hoy.

up script ta forward change korar jonno use hoy, down script ta reverse order a kaj kore. 
Down script ta emon vabe likha hoy jate primary key wala table gula sob seshe drop hoy. 

4. Erpore amra makefile create korlam, bar bar same command na chalanor jonno.

migrate create -ext sql -dir db/migration -seq init_schema


docker exec -it postgres12 /bin/sh  eita use kore 


Vid - 04 - Crud

Different way te korte pari
a) low level standard library, database/sql use kore.

Very fast & straightforward
But need to manual mapping for SQL fields to variable.

b) GORM 

Very short code
But need to learn GORM function to write query.
Run slowly on high load.

c) SQLX

Fast & easy to use.
Fields mapping via query text & struct tags.
Failure won't occur until runtime

d) SQLC

Fast & easy to use
Automatic code generation.
Catch SQL query errors before generating codes.
postgres full support.

brew install sqlc

sqlc.yaml file generate hoilo, seikhane kichu config bole dilam. 

query folder a query gulu likhe dilam, and seivabe sqlc folder a go er crud code
gerenate hoye gelo.



#Vid - 05 Unit Test

Jehetu query gula test korbo, so database er sathe kotha
bolte hobe, and ei jonno db er driver lagbe. which is lib/pq

go get github.com/lib/pq


test result check korar jonno j package lage, ta holo testify package.

go get github.com/stretchr/testify

Eita diye bujha jay, koto percent code cover hoise unit test er maddhome.



*** How to run ***

make postgres and open docker deamon first.


#Vid - 06 Database Transaction

Transfer 10 USD from account A to account B.

5 things will happen behind the scene

#1. Create a transfer record with amount = 10;

#2. Create an account entry for account A with amount = -10;

#3. Create an account entry for account B with amount = +10;

#4. Subtract 10 from the balance of account A

#5. Add 10 to the balance of account B


But why we need DB Transaction? - 

1. To provide a reliable and consistent unit of work, even in case of system failure.
2. To provide isolation between programs that access the database concurrently.

So, ACID property should obey.


composition need to study

lex (closure) need to study

channel need to study.
channel is designed to connect concerent go routine to share data efficiently with each other with explicit locking system.

go routine need to study well.


Database transaction likha khub easy but concurrency khub valovabe handle korte hobe. Noyto nightmare hoye jabe.

Eijonno j kono transaction type query gulann k concurrency test er moddhe diye jete hoy. amra 5 ta concerent request korbo,
and dekhbo kono jhamela hoy kina. several concerent go routine chalabo amra.




Video - 07

Need to carefully handle the concerent transaction to avoid deadlock & database locking.

TDD - Test Driven Development

We'll write test code first to make our code break. Then we gradually improve our code to fight against real world battle.



docker exec -it postgres12 psql -U root -d bank

BEGIN;

SELECT * FROM accounts WHERE id = 1;

ROLLBACK;

BEGIN;

SELECT * FROM accounts WHERE id = 1 FOR UPDATE;

UPDATE accounts SET balance = 500 WHERE id = 1;

COMMIT;


transfers table & account table er moddhe somporko hosse account table er id diye, Foriegn
key hisebe. So, account id te kono update korle seitar effect porbe transfer table a.

Ei jonno jokhon e amra kono update operation chalabo account table a, eita table k lock kora
dorkar hoye pore, data consistency er jonno. 

Jehetu Foriegn key constraint er jonno deadlock hoitese. Amra borong tulei dei. Diye dekhi ki hoy.

Eibar test pass korbe. But amra amader Foriegn key constraint haray fellam. Which is not good. 


Better way to solve it.

Amra jodi account update er query er dike takai dekhte pabo, eita sudhu balance kei
update kortese. Onno kono column k noy. Jar karone amader locking a jaite hobe. 

So, jodi ami bole dite pari j kono account k update korar somoy tar id k touch korbo na,
tahole psql er r lock korar dorkar nai. So, deadlock eo jabe na.


Er thekeo better way ache.

currently amra 2 ta query diye update kortechi account. 

1. Get the account,
2. Update that account.

Eitake optimize koore amra ekta single query te convert korte pari. 

Video - 08

The best way to handle deadlock is to avoid it.

Surute amra always 1 ta account theke second ekta account a taka transfer kortesilam. But amra jodi reverse direction a
money transfer suru kori tahole abaro sei deadlock a pore jabe amader. 

Solution hoilo, query order matter. consistent order a query gulu likhte hobe jeno deadlock avoid kora jay. 

Best defence on deadlock is to avoid them.

Scenario, 2 ta concurrent transaction same query order a cholle, ekta query COMMIT er age porjonto onno ta locked obosthay thakbe. But
deadlock a porbe na, ei rokom consistent manner a query run korle.

Video - 09 

Read Phenomena of MySQL & Postgres.

Video - 10

Workflow -> Jobs -> Steps -> Actions

Actions are standalone command.

Video - 11

go get -u github.com/gin-gonic/gin

video - 12

viper used for load configuration from file and will overwrite by env variable.

video - 13

ls -l ~/go/bin

function gulur interface create korar jonno sqlc er config a emit interface true kore dite hobe.

main.go te

	_ "github.com/golang/mock/mockgen/model"

import na korle error khabe. 

mockgen -package mockdb -destination db/mock/store.go github.com/bindubritto/bank/db/sqlc Store